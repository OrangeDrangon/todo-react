{"version":3,"sources":["components/Table/CatagorySelect/CatagorySelect.module.scss","components/Root/Root.module.scss","components/Table/Tasks/Tasks.module.scss","components/Table/Tasks/Task/Task.module.scss","components/Table/Table.module.scss","components/Table/TaskDetails/TaskDetails.module.scss","components/Table/CatagorySelect/AddCatagory/AddCatagory.component.tsx","components/Table/CatagorySelect/CatagorySelect.component.tsx","components/Table/TaskDetails/TaskDetails.component.tsx","components/Table/Tasks/Task/Task.component.tsx","components/Table/Tasks/Tasks.component.tsx","components/Table/AddTask/AddTask.component.tsx","components/Table/DeleteCatagory/DeleteCatagory.component.tsx","utils/database.util.ts","components/Table/Table.component.tsx","hooks/useCatagories.hook.ts","hooks/useTasks.hook.ts","components/Root/Root.component.tsx","serviceWorker.ts","index.tsx","components/Table/CatagorySelect/AddCatagory/AddCatagory.module.scss"],"names":["module","exports","container","dropdown","modal","wrapper","check","task","time","string","fill","more","border","card","header","content","tasks","actions","form","field","AddCatagory","_ref","submit","_useState","useState","_useState2","Object","slicedToArray","value","setValue","_useState3","_useState4","open","setOpen","react_default","a","createElement","index_es","color","onClick","icons_index_es","className","classes","onBackdropClick","onEscapeKeyDown","children","concat","input","label","onChange","_ref2","currentTarget","variant","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","CatagorySelect","catagory","setCatagory","catagories","addCatagory","option","dist_default","options","AddCatagory_component","_catagory","toLowerCase","length","map","indexOf","abrupt","_x","apply","this","arguments","TaskDetails","initialDate","initialContent","setContent","Date","date","setDate","useEffect","material_ui_pickers_esm","utils","DateFnsUtils","Task","index","deleteTask","updateTask","in","direction","format","TaskDetails_component","_ref3","_callee2","_context2","_x2","Tasks","elementTasks","Task_component","key","id","Math","random","AddTask","now","DeleteCatagory","deleteCatagory","catagoryId","classCallCheck","createClass","_save","tNew","db","addTask","_delete2","where","equals","delete","Catagory","_dec","target","propertyKey","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","_class","initializerDefineProperty","_descriptor","_save2","_callee4","_this","_context4","transaction","_callee3","catNew","taskIds","_context3","Promise","all","put","and","_loadTasks","_callee5","_context5","toArray","t0","elm","Error","_delete3","_callee6","_context6","_getAll","_callee7","_context7","applyDecoratedDescriptor","prototype","configurable","writable","initializer","_Dexie","Database","name","_this2","possibleConstructorReturn","getPrototypeOf","call","version","stores","table","mapToClass","inherits","_addCatagory","_callee9","_ref4","data","_this3","_context9","objectWithoutProperties","_callee8","newId","_context8","objectSpread","_addTask","_callee11","_ref6","_this4","_context11","_callee10","_context10","_getCatagory","_callee12","_context12","limit","t1","_x3","Dexie","Table","_useCatagories","setCatagories","getAll","catagoriesNew","save","toConsumableArray","catsNew","slice","splice","cat","useCatagories","_useTasks","setTasks","tasksNew","loadTasks","reverse","_x4","useTasks","handleChange","selected","getCatagory","CatagorySelect_component","Tasks_component","AddTask_component","style","flex","DeleteCatagory_component","Root","Table_component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","Root_component","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,UAAA,kCAAAC,SAAA,uDCAlBH,EAAAC,QAAA,CAAkBC,UAAA,8CCAlBF,EAAAC,QAAA,CAAkBC,UAAA,yBAAAE,MAAA,0CCAlBJ,EAAAC,QAAA,CAAkBI,QAAA,sBAAAC,MAAA,oBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,OAAA,qBAAAC,KAAA,mBAAAC,KAAA,mBAAAC,OAAA,0CCAlBZ,EAAAC,QAAA,CAAkBY,KAAA,oBAAAC,OAAA,sBAAAC,QAAA,uBAAAC,MAAA,qBAAAC,QAAA,4CCAlBjB,EAAAC,QAAA,CAAkBG,MAAA,2BAAAS,KAAA,0BAAAK,KAAA,0BAAAC,MAAA,qUCgDHC,MA3Cf,SAAAC,GAIG,IAHDC,EAGCD,EAHDC,OAGCC,EACyBC,mBAAS,IADlCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACMK,EADNH,EAAA,GACaI,EADbJ,EAAA,GAAAK,EAEuBN,oBAAS,GAFhCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEME,EAFND,EAAA,GAEYE,EAFZF,EAAA,GAID,OACEG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,MAAM,UAAUC,QAAS,kBAAMN,GAAQ,KACjDC,EAAAC,EAAAC,cAACI,EAAA,EAAD,OAEFN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEI,UAAWC,IAAQtC,MACnB4B,KAAMA,EACNW,gBAAiB,kBAAMV,GAAQ,IAC/BW,gBAAiB,kBAAMX,GAAQ,IAC/BY,SACEX,EAAAC,EAAAC,cAAA,OAAKK,UAAS,GAAAK,OAAKJ,IAAQ7B,KAAb,UACZqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEI,UAAWC,IAAQK,MACnBC,MAAM,OACNC,SAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,cAAH,OAAuBtB,EAASsB,EAAcvB,UAE1DM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAM,UACNc,QAAQ,YACRb,QAAOb,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAE,SAAAC,IAAA,OAAAF,EAAAnB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGtC,EAAOM,GADV,WAAA8B,EAAAG,KAAA,CAAAH,EAAAE,KAAA,QAEL3B,GAAQ,GAFH,wBAAAyB,EAAAI,SAAAN,OAHX,eCwBGO,MA/Cf,SAAA1C,GAYG,IAXD4B,EAWC5B,EAXD4B,SACAe,EAUC3C,EAVD2C,SACAC,EASC5C,EATD4C,YACAC,EAQC7C,EARD6C,WACAC,EAOC9C,EAPD8C,YAQMC,EAASJ,EACX,CACEhB,MAAOgB,EAAShB,MAChBpB,MAAOoC,EAASpC,OAElB,GAEJ,OACEM,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQxC,WACtBgC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEM,UAAWC,IAAQvC,SACnBmE,QAASJ,EACTjB,SAAUA,EACVrB,MAAOwC,IAETlC,EAAAC,EAAAC,cAACmC,EAAD,CACEjD,OAAM,eAAA4B,EAAAxB,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAE,SAAAC,EAAOR,GAAP,IAAApB,EAAA4C,EAAA,OAAAlB,EAAAnB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACAhC,EAAQoB,EAAMyB,gBAElBzB,EAAM0B,OAAS,IACgD,IAA/DR,EAAWS,IAAI,SAAAX,GAAQ,OAAIA,EAASpC,QAAOgD,QAAQhD,IAJ/C,CAAA8B,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAMmBO,EAAY,CAAEnB,QAAOpB,UANxC,cAMEoC,EANFN,EAAAG,KAOJI,EAAYD,GAPRN,EAAAmB,OAAA,UAQG,GARH,cAAAnB,EAAAmB,OAAA,UAUG,GAVH,yBAAAnB,EAAAI,SAAAN,MAAF,gBAAAsB,GAAA,OAAA5B,EAAA6B,MAAAC,KAAAC,YAAA,oFC2CCC,MArEf,SAAA7D,GAYG,IAXDW,EAWCX,EAXDW,KACAC,EAUCZ,EAVDY,QACAkD,EASC9D,EATD8D,YACAC,EAQC/D,EARD+D,eACA9D,EAOCD,EAPDC,OAOCC,EAC6BC,mBAAS,IADtCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACMR,EADNU,EAAA,GACe4D,EADf5D,EAAA,GAAAK,EAEuBN,mBAAS,IAAI8D,MAFpCvD,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEMyD,EAFNxD,EAAA,GAEYyD,EAFZzD,EAAA,GAaD,OATA0D,oBAAU,WAGR,OAFAJ,EAAWD,GACXI,EAAQL,GACD,WACLE,EAAW,IACXG,EAAQ,IAAIF,QAEb,CAACF,EAAgBD,IAGlBjD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEL,KAAMA,EACNW,gBAAiB,kBAAMV,GAAQ,IAC/BW,gBAAiB,kBAAMX,GAAQ,IAC/BQ,UAAWC,IAAQtC,MACnByC,SACEX,EAAAC,EAAAC,cAAA,OAAKK,UAAS,GAAAK,OAAKJ,IAAQ7B,KAAb,UACZqB,EAAAC,EAAAC,cAAA,QAAMK,UAAWC,IAAQxB,MACvBgB,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQvB,OACtBe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEW,MAAM,OACNpB,MAAOb,EACPkC,SAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,cAAH,OACRkC,EAAWlC,EAAcvB,WAI/BM,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAyBC,MAAOC,KAC9B1D,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQvB,OACtBe,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAYzC,SAAUuC,EAAS5D,MAAO2D,EAAMvC,MAAM,UAEpDd,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQvB,OACtBe,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAYzC,SAAUuC,EAAS5D,MAAO2D,EAAMvC,MAAM,YAIxDd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAM,UACNc,QAAQ,YACRb,QAAOb,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAE,SAAAC,IAAA,OAAAF,EAAAnB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGtC,EAAOP,EAASwE,GADnB,WAAA7B,EAAAG,KAAA,CAAAH,EAAAE,KAAA,QAEL3B,GAAQ,GAFH,wBAAAyB,EAAAI,SAAAN,OAHX,gBCKKqC,MA3Df,SAAAxE,GAUG,IATDd,EASCc,EATDd,KACAuF,EAQCzE,EARDyE,MACAC,EAOC1E,EAPD0E,WACAC,EAMC3E,EAND2E,WAMCzE,EACuBC,oBAAS,GADhCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACMS,EADNP,EAAA,GACYQ,EADZR,EAAA,GAGD,OACES,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQ9B,QACtBsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM4D,IAAI,GACR/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO6D,UAAU,KAAKD,IAAI,GACxB/D,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQrC,SACtB6B,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQpC,OACtB4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYE,QAAOb,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAE,SAAAC,IAAA,OAAAF,EAAAnB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBmC,EAAWD,GAA7B,cAAApC,EAAAmB,OAAA,SAAAnB,EAAAG,MAAA,wBAAAH,EAAAI,SAAAN,OACnBtB,EAAAC,EAAAC,cAACI,EAAA,EAAD,QAGJN,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQnC,MACtB2B,EAAAC,EAAAC,cAAA,WAAM7B,EAAKQ,SACXmB,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQlC,MACtB0B,EAAAC,EAAAC,cAACI,EAAA,EAAD,MACAN,EAAAC,EAAAC,cAAA,QAAMK,UAAWC,IAAQjC,QACtB0F,YAAO5F,EAAKgF,KAAM,qBAIzBrD,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQhC,OACxBwB,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQ/B,MACtBuB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYE,QAAS,kBAAMN,GAAQ,KACjCC,EAAAC,EAAAC,cAACI,EAAA,EAAD,WAMVN,EAAAC,EAAAC,cAACgE,EAAD,CACEpE,KAAMA,EACNC,QAASA,EACTmD,eAAgB7E,EAAKQ,QACrBoE,YAAa5E,EAAKgF,KAClBjE,OAAM,eAAA+E,EAAA3E,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAE,SAAA+C,EAAOvF,EAASwE,GAAhB,OAAAjC,EAAAnB,EAAAsB,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,YACF7C,EAAQ2D,OAAS,GAAKa,EAAO,IAAID,MAD/B,CAAAiB,EAAA3C,KAAA,eAAA2C,EAAA3C,KAAA,EAEEoC,EAAWF,EAAO,CAAE/E,UAASwE,SAF/B,cAAAgB,EAAA1B,OAAA,UAGG,GAHH,cAAA0B,EAAA1B,OAAA,UAKG,GALH,wBAAA0B,EAAAzC,SAAAwC,MAAF,gBAAAxB,EAAA0B,GAAA,OAAAH,EAAAtB,MAAAC,KAAAC,YAAA,OCzBCwB,MAxBf,SAAApF,GAQG,IAPDL,EAOCK,EAPDL,MACA+E,EAMC1E,EAND0E,WACAC,EAKC3E,EALD2E,WAMMU,GAAgB1F,GAAgB,IAAI2D,IAAS,SAACpE,EAAMuF,GACxD,OACE5D,EAAAC,EAAAC,cAACuE,EAAD,CACEC,IAAKrG,EAAKsG,GAAKtG,EAAKsG,GAAKC,KAAKC,SAC9BxG,KAAMA,EACNuF,MAAOA,EACPC,WAAYA,EACZC,WAAYA,MAKlB,OAAO9D,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQxC,WAAYwG,ICQ9BM,MA/Bf,SAAA3F,GAIG,IAHDC,EAGCD,EAHDC,OAGCC,EACuBC,oBAAS,GADhCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACMS,EADNP,EAAA,GACYQ,EADZR,EAAA,GAGD,OACES,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM4D,IAAI,GACR/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO6D,UAAU,OAAOD,IAAI,GAC1B/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAM,UACNc,QAAQ,YACRb,QAAS,kBAAMN,GAAQ,KAHzB,gBASJC,EAAAC,EAAAC,cAACgE,EAAD,CACEpE,KAAMA,EACNC,QAASA,EACTkD,YAAa,IAAIG,KAAKA,KAAK2B,MAAQ,KACnC7B,eAAe,GACf9D,OAAQA,MCVD4F,UC0JKtF,ED1JLsF,EAhBf,SAAA7F,GAA4E,IAAlD8F,EAAkD9F,EAAlD8F,eACxB,OACEjF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM4D,IAAI,GACR/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO6D,UAAU,QAAQD,IAAI,GAC3B/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAM,YACNc,QAAQ,YACRb,QAAOb,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAE,SAAAC,IAAA,OAAAF,EAAAnB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBuD,IAAlB,cAAAzD,EAAAmB,OAAA,SAAAnB,EAAAG,MAAA,wBAAAH,EAAAI,SAAAN,OAHX,+HCQKqC,GAAb,WAME,SAAAA,EAAAxE,GAAsD,IAAxCwF,EAAwCxF,EAAxCwF,GAAIO,EAAoC/F,EAApC+F,WAAYrG,EAAwBM,EAAxBN,QAASwE,EAAelE,EAAfkE,KAAe7D,OAAA2F,EAAA,EAAA3F,CAAAsD,KAAAa,GAAAb,KALtD6B,QAKsD,EAAA7B,KAJtDoC,gBAIsD,EAAApC,KAHtDjE,aAGsD,EAAAiE,KAFtDO,UAEsD,EACpDP,KAAK6B,GAAKA,EACV7B,KAAKoC,WAAaA,EAClBpC,KAAKjE,QAAUA,EACfiE,KAAKO,KAAOA,EAVhB,OAAA7D,OAAA4F,EAAA,EAAA5F,CAAAmE,EAAA,EAAAe,IAAA,OAAAhF,MAAA,eAAA2F,EAAA7F,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAA,SAAAC,IAAA,IAAAgE,EAAA,OAAAlE,EAAAnB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAcuB6D,GAAGC,QAAQ1C,MAdlC,cAcUwC,EAdV9D,EAAAG,MAeagD,KACP7B,KAAK6B,GAAKW,EAAKX,IAhBrBnD,EAAAmB,OAAA,SAkBW2C,GAlBX,wBAAA9D,EAAAI,SAAAN,EAAAwB,SAAA,yBAAAuC,EAAAxC,MAAAC,KAAAC,YAAA,KAAA2B,IAAA,SAAAhF,MAAA,eAAA+F,EAAAjG,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAA,SAAA+C,IAAA,OAAAhD,EAAAnB,EAAAsB,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,WAsBQoB,KAAK6B,GAtBb,CAAAN,EAAA3C,KAAA,eAAA2C,EAAA3C,KAAA,EAuBY6D,GAAGzG,MACN4G,MAAM,MACNC,OAAO7C,KAAK6B,IACZiB,SA1BT,wBAAAvB,EAAAzC,SAAAwC,EAAAtB,SAAA,yBAAA2C,EAAA5C,MAAAC,KAAAC,YAAA,MAAAY,EAAA,GA+BakC,IA+HOnG,GA3HN,EAJdoG,EAgIS,SAASC,EAAaC,GAC3B,IAAIC,EAAazG,OAAO0G,yBAAyBH,EAAQC,IAAgB,GAErEC,EAAWE,YAAczG,IAC3BuG,EAAWE,WAAazG,EACxBF,OAAO4G,eAAeL,EAAQC,EAAaC,KArIjDI,EAAA,WAME,SAAAR,EAAA7E,GAA6C,IAA/B2D,EAA+B3D,EAA/B2D,GAAI7D,EAA2BE,EAA3BF,MAAOpB,EAAoBsB,EAApBtB,MAAoBF,OAAA2F,EAAA,EAAA3F,CAAAsD,KAAA+C,GAAA/C,KAL7C6B,QAK6C,EAAA7B,KAJ7ChC,WAI6C,EAAAgC,KAH7CpD,WAG6C,EAAAF,OAAA8G,EAAA,EAAA9G,CAAAsD,KAAA,QAAAyD,EAAAzD,MAC3CA,KAAK6B,GAAKA,EACV7B,KAAKhC,MAAQA,EACbgC,KAAKpD,MAAQA,EACboD,KAAKhE,MAAQ,GAVjB,OAAAU,OAAA4F,EAAA,EAAA5F,CAAAqG,EAAA,EAAAnB,IAAA,OAAAhF,MAAA,eAAA8G,EAAAhH,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAA,SAAAoF,IAAA,IAAAC,EAAA5D,KAAA,OAAA1B,EAAAnB,EAAAsB,KAAA,SAAAoF,GAAA,cAAAA,EAAAlF,KAAAkF,EAAAjF,MAAA,cAAAiF,EAAAjF,KAAA,EAkBiB6D,GAAGqB,YAAY,KAAM,CAACrB,GAAGvD,WAAYuD,GAAGzG,OAAxCU,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAgD,SAAAwF,IAAA,IAAAC,EAAAC,EAAA,OAAA3F,EAAAnB,EAAAsB,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,cAAAsF,EAAAtF,KAAA,EACtC6D,GAAGtD,YAAYyE,GADuB,YACrDI,EADqDE,EAAArF,MAGhDgD,GAHgD,CAAAqC,EAAAtF,KAAA,gBAIzDgF,EAAK/B,GAAKmC,EAAOnC,GAJwCqC,EAAAtF,KAAA,EAMnCuF,QAAQC,IAC5BR,EAAK5H,MAAM2D,IAAI,SAAApE,GAAI,OAAIkH,GAAGzG,MAAMqI,IAAI9I,MAPmB,cAMnD0I,EANmDC,EAAArF,KAAAqF,EAAAtF,KAAA,GAUnD6D,GAAGzG,MACN4G,MAAM,cACNC,OAAOe,EAAK/B,IACZyC,IAAI,SAAA/I,GACH,QAAIA,EAAKsG,KAC8B,IAA9BoC,EAAQrE,QAAQrE,EAAKsG,MAK/BiB,SApBsD,eAAAoB,EAAArE,OAAA,SAsBpDmE,GAtBoD,yBAAAE,EAAApF,SAAAiF,OAlBjE,cAAAF,EAAAhE,OAAA,SAAAgE,EAAAhF,MAAA,wBAAAgF,EAAA/E,SAAA6E,MAAA,yBAAAD,EAAA3D,MAAAC,KAAAC,YAAA,KAAA2B,IAAA,YAAAhF,MAAA,eAAA2H,EAAA7H,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAA,SAAAiG,IAAA,OAAAlG,EAAAnB,EAAAsB,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,WA6CQoB,KAAK6B,GA7Cb,CAAA4C,EAAA7F,KAAA,eAAA6F,EAAA7F,KAAA,EA8C0B6D,GAAGzG,MACpB4G,MAAM,cACNC,OAAO7C,KAAK6B,IACZ6C,UAjDT,OAAAD,EAAAE,GAiDwB,SAAAC,GAAG,OAAI,IAAI/D,GAAK+D,IAHlC5E,KAAKhE,MA9CXyI,EAAA5F,KAiDoBc,IAjDpB8E,EAAAE,IAAAF,EAAA7F,KAAA,qBAmDY,IAAIiG,MAAM,0DAnDtB,wBAAAJ,EAAA3F,SAAA0F,EAAAxE,SAAA,yBAAAuE,EAAAxE,MAAAC,KAAAC,YAAA,KAAA2B,IAAA,SAAAhF,MAAA,eAAAkI,EAAApI,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAA,SAAAwG,IAAA,OAAAzG,EAAAnB,EAAAsB,KAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,WAwDQoB,KAAK6B,GAxDb,CAAAmD,EAAApG,KAAA,eAAAoG,EAAApG,KAAA,EAyDYuF,QAAQC,IACZpE,KAAKhE,MAAM2D,IAAI,SAAApE,GACb,OAAOA,EAAKuH,YA3DtB,cAAAkC,EAAApG,KAAA,EA8DY6D,GAAGvD,WACN0D,MAAM,MACNC,OAAO7C,KAAK6B,IACZiB,SAjET,wBAAAkC,EAAAlG,SAAAiG,EAAA/E,SAAA,yBAAA8E,EAAA/E,MAAAC,KAAAC,YAAA,OAAA2B,IAAA,SAAAhF,MAAA,eAAAqI,EAAAvI,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAA,SAAA2G,IAAA,OAAA5G,EAAAnB,EAAAsB,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,cAAAuG,EAAAvG,KAAA,EAsEkB6D,GAAGvD,WAAWwF,UAtEhC,cAAAS,EAAAR,GAsE+C,SAAAC,GAAG,OAAI,IAAI7B,EAAS6B,IAtEnEO,EAAAtF,OAAA,SAAAsF,EAAAtG,KAsE2Cc,IAtE3CwF,EAAAR,KAAA,wBAAAQ,EAAArG,SAAAoG,MAAA,yBAAAD,EAAAlF,MAAAC,KAAAC,YAAA,MAAA8C,EAAA,GAAAU,EAAA/G,OAAA0I,EAAA,EAAA1I,CAAA6G,EAAA8B,UAAA,SAAArC,GAAA,CAAAsC,cAAA,EAAAjC,YAAA,EAAAkC,UAAA,EAAAC,YAAA,OAAAjC,GAyHWd,GAAK,IA/ChB,SAAAgD,GAIE,SAAAC,EAAYC,GAAc,IAAAC,EAAA,OAAAlJ,OAAA2F,EAAA,EAAA3F,CAAAsD,KAAA0F,IACxBE,EAAAlJ,OAAAmJ,EAAA,EAAAnJ,CAAAsD,KAAAtD,OAAAoJ,EAAA,EAAApJ,CAAAgJ,GAAAK,KAAA/F,KAAM2F,KAJRzG,gBAG0B,EAAA0G,EAF1B5J,WAE0B,EAExB4J,EAAKI,QAAQ,GAAGC,OAAO,CACrB/G,WAAY,qBACZlD,MAAO,oCAGT4J,EAAK1G,WAAa0G,EAAKM,MAAM,cAC7BN,EAAK5J,MAAQ4J,EAAKM,MAAM,SAExBN,EAAK1G,WAAWiH,WAAWpD,IAVH6C,EAJ5B,OAAAlJ,OAAA0J,EAAA,EAAA1J,CAAAgJ,EAAAD,GAAA/I,OAAA4F,EAAA,EAAA5F,CAAAgJ,EAAA,EAAA9D,IAAA,cAAAhF,MAAA,eAAAyJ,EAAA3J,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAA,SAAA+H,EAAAC,GAAA,IAAA1E,EAAA2E,EAAAC,EAAAzG,KAAA,OAAA1B,EAAAnB,EAAAsB,KAAA,SAAAiI,GAAA,cAAAA,EAAA/H,KAAA+H,EAAA9H,MAAA,cAiBsBiD,EAjBtB0E,EAiBsB1E,GAAO2E,EAjB7B9J,OAAAiK,EAAA,EAAAjK,CAAA6J,EAAA,QAAAG,EAAA9H,KAAA,EAkBiBoB,KAAK8D,YAAY,KAAM,CAAC9D,KAAKd,YAA7BxC,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAA0C,SAAAqI,IAAA,IAAAC,EAAA,OAAAvI,EAAAnB,EAAAsB,KAAA,SAAAqI,GAAA,cAAAA,EAAAnI,KAAAmI,EAAAlI,MAAA,WACvCiD,EADuC,CAAAiF,EAAAlI,KAAA,eAAAkI,EAAAlI,KAAA,EAE3C6H,EAAKvH,WAAWmF,IAAhB3H,OAAAqK,EAAA,EAAArK,CAAA,CAAsBmF,MAAO2E,IAFc,OAAAM,EAAAnC,GAAAmC,EAAAjI,KAAAiI,EAAAlI,KAAA,sBAAAkI,EAAAlI,KAAA,EAG3C6H,EAAKvH,WAAWmF,IAAImC,GAHuB,OAAAM,EAAAnC,GAAAmC,EAAAjI,KAAA,cAC/CgI,EAD+CC,EAAAnC,GAAAmC,EAAAjH,OAAA,SAI9C,IAAIkD,GAAJrG,OAAAqK,EAAA,EAAArK,CAAA,CAAemF,GAAIgF,GAAUL,KAJiB,yBAAAM,EAAAhI,SAAA8H,OAlB3D,cAAAF,EAAA7G,OAAA,SAAA6G,EAAA7H,MAAA,wBAAA6H,EAAA5H,SAAAwH,EAAAtG,SAAA,gBAAAF,GAAA,OAAAuG,EAAAtG,MAAAC,KAAAC,YAAA,KAAA2B,IAAA,UAAAhF,MAAA,eAAAoK,EAAAtK,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAA,SAAA0I,EAAAC,GAAA,IAAArF,EAAA2E,EAAAW,EAAAnH,KAAA,OAAA1B,EAAAnB,EAAAsB,KAAA,SAAA2I,GAAA,cAAAA,EAAAzI,KAAAyI,EAAAxI,MAAA,cA0BkBiD,EA1BlBqF,EA0BkBrF,GAAO2E,EA1BzB9J,OAAAiK,EAAA,EAAAjK,CAAAwK,EAAA,QAAAE,EAAAxI,KAAA,EA2BiBoB,KAAK8D,YAAY,KAAM,CAAC9D,KAAKhE,OAA7BU,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAqC,SAAA8I,IAAA,IAAAR,EAAA,OAAAvI,EAAAnB,EAAAsB,KAAA,SAAA6I,GAAA,cAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,WAClCiD,EADkC,CAAAyF,EAAA1I,KAAA,eAAA0I,EAAA1I,KAAA,EAEtCuI,EAAKnL,MAAMqI,IAAX3H,OAAAqK,EAAA,EAAArK,CAAA,CAAiBmF,MAAO2E,IAFc,OAAAc,EAAA3C,GAAA2C,EAAAzI,KAAAyI,EAAA1I,KAAA,sBAAA0I,EAAA1I,KAAA,EAGtCuI,EAAKnL,MAAMqI,IAAImC,GAHuB,OAAAc,EAAA3C,GAAA2C,EAAAzI,KAAA,cAC1CgI,EAD0CS,EAAA3C,GAAA2C,EAAAzH,OAAA,SAKzC,IAAIgB,GAAJnE,OAAAqK,EAAA,EAAArK,CAAA,CAAWmF,GAAIgF,GAAUL,KALgB,yBAAAc,EAAAxI,SAAAuI,OA3BtD,cAAAD,EAAAvH,OAAA,SAAAuH,EAAAvI,MAAA,wBAAAuI,EAAAtI,SAAAmI,EAAAjH,SAAA,gBAAAwB,GAAA,OAAAwF,EAAAjH,MAAAC,KAAAC,YAAA,KAAA2B,IAAA,cAAAhF,MAAA,eAAA2K,EAAA7K,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAA,SAAAiJ,EAoCoB5K,GApCpB,OAAA0B,EAAAnB,EAAAsB,KAAA,SAAAgJ,GAAA,cAAAA,EAAA9I,KAAA8I,EAAA7I,MAAA,cAAA6I,EAAA9C,GAqCe5B,GArCf0E,EAAA7I,KAAA,EAsCaoB,KAAKd,WACT0D,MAAM,SACNC,OAAOjG,GACP8K,MAAM,GACNhD,UA1CT,cAAA+C,EAAAE,GAAAF,EAAA5I,KA0CoB,GA1CpB4I,EAAA5H,OAAA,aAAA4H,EAAA9C,GAAA8C,EAAAE,KAAA,wBAAAF,EAAA3I,SAAA0I,EAAAxH,SAAA,gBAAA4H,GAAA,OAAAL,EAAAxH,MAAAC,KAAAC,YAAA,MAAAyF,EAAA,CAA8BmC,KA+Cd,CAAa,QChGdC,OA1Df,WAAiB,IAAAC,ECVV,WAAyB,IAAAxL,EACMC,mBAAqB,IAD3BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvB2C,EADuBzC,EAAA,GACXuL,EADWvL,EAAA,GAG9BgE,oBAAU,WACR/D,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAC,SAAAC,IAAA,OAAAF,EAAAnB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAiG,GACCqD,EADDtJ,EAAAE,KAAA,EACqBmE,GAASkF,SAD9B,OAAAvJ,EAAAiJ,GAAAjJ,EAAAG,MAAA,EAAAH,EAAAiG,IAAAjG,EAAAiJ,IAAA,wBAAAjJ,EAAAI,SAAAN,KAAD9B,IAGC,IAEH,IAAMyC,EAAW,eAAAjB,EAAAxB,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAG,SAAA+C,EAAOkF,GAAP,IAAAxC,EAAAkE,EAAA,OAAA5J,EAAAnB,EAAAsB,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EACG,IAAImE,GAASyD,GAAM2B,OADtB,cACZnE,EADYzC,EAAA1C,KAEZqJ,EAFY,CAEKlE,GAFLlG,OAAApB,OAAA0L,EAAA,EAAA1L,CAEgBwC,IAClC8I,EAAcE,GAHI3G,EAAA1B,OAAA,SAIXmE,GAJW,wBAAAzC,EAAAzC,SAAAwC,MAAH,gBAAAxB,GAAA,OAAA5B,EAAA6B,MAAAC,KAAAC,YAAA,GAOXkC,EAAc,eAAAd,EAAA3E,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAG,SAAAwF,EAAO/E,GAAP,IAAAqJ,EAAA,OAAA/J,EAAAnB,EAAAsB,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,cACfyJ,EAAUnJ,EAAWoJ,SACnBC,OAAOF,EAAQ1I,IAAI,SAAA6I,GAAG,OAAIA,EAAI3G,KAAIjC,QAAQZ,EAAS6C,IAAK,GAF3CqC,EAAAtF,KAAA,EAGfI,EAAS8D,SAHM,OAIrBkF,EAAcK,GAJO,wBAAAnE,EAAApF,SAAAiF,MAAH,gBAAAvC,GAAA,OAAAH,EAAAtB,MAAAC,KAAAC,YAAA,GAOpB,MAAO,CAAEf,aAAYC,cAAagD,kBDZkBsG,GAA5CvJ,EADO6I,EACP7I,WAAYC,EADL4I,EACK5I,YAAagD,EADlB4F,EACkB5F,eADlB5F,EAEiBC,mBAA0B,MAF3CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAERyC,EAFQvC,EAAA,GAEEwC,EAFFxC,EAAA,GAAAiM,EETV,SAAkB1J,GAA2B,IAAAzC,EACxBC,mBAAiB,IADOC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3CP,EAD2CS,EAAA,GACpCkM,EADoClM,EAAA,GAG5CiG,EAAO,eAAArG,EAAAK,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAG,SAAAC,EAAOgI,GAAP,IAAAhE,EAAAoG,EAAA,OAAAtK,EAAAnB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACVI,EADU,CAAAN,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAEO,IAAIiC,GAAK2F,GAAM2B,OAFtB,OAEN3F,EAFM9D,EAAAG,KAGN+J,EAHM,CAGMpG,GAHN1E,OAAApB,OAAA0L,EAAA,EAAA1L,CAGeV,IAC3B2M,EAASC,GAJG,wBAAAlK,EAAAI,SAAAN,MAAH,gBAAAsB,GAAA,OAAAzD,EAAA0D,MAAAC,KAAAC,YAAA,GAQPc,EAAU,eAAA7C,EAAAxB,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAG,SAAA+C,EAAOR,GAAP,OAAAxC,EAAAnB,EAAAsB,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,WACbI,EADa,CAAAuC,EAAA3C,KAAA,eAAA2C,EAAA3C,KAAA,EAETI,EAAS6J,YAFA,cAGf7J,EAAShD,MACN8M,UACAP,OAAOzH,EAAO,GACdgI,UANYvH,EAAA3C,KAAA,EAOTI,EAASmJ,OAPA,OAQfQ,EAAS3J,EAAShD,MAAMsM,SART,wBAAA/G,EAAAzC,SAAAwC,MAAH,gBAAAE,GAAA,OAAAtD,EAAA6B,MAAAC,KAAAC,YAAA,GAYVe,EAAU,eAAAuF,EAAA7J,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAG,SAAAwF,EACjBjD,EADiBO,GAAA,IAAAtF,EAAAwE,EAAAqI,EAAArN,EAAA,OAAA+C,EAAAnB,EAAAsB,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,UAEf7C,EAFesF,EAEftF,QAASwE,EAFMc,EAENd,MAEPvB,EAJa,CAAAkF,EAAAtF,KAAA,gBAAAsF,EAAAtF,KAAA,EAKTI,EAAS6J,YALA,cAMTD,EAAW5J,EAAShD,MAAMsM,QAAQQ,WAClCvN,EAAOqN,EAAS9H,IACjB/E,QAAUA,EACfR,EAAKgF,KAAOA,EACZvB,EAAShD,MAAQ4M,EAASN,QAAQQ,UAVnB5E,EAAAtF,KAAA,GAWTI,EAASmJ,OAXA,QAYfQ,EAASC,GAZM,yBAAA1E,EAAApF,SAAAiF,MAAH,gBAAA6D,EAAAmB,GAAA,OAAAxC,EAAAxG,MAAAC,KAAAC,YAAA,GA6BhB,OAbAQ,oBAAU,WACR/D,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAC,SAAAoF,IAAA,OAAArF,EAAAnB,EAAAsB,KAAA,SAAAoF,GAAA,cAAAA,EAAAlF,KAAAkF,EAAAjF,MAAA,WACKI,EADL,CAAA6E,EAAAjF,KAAA,eAAAiF,EAAAjF,KAAA,EAESI,EAAS6J,YAFlB,cAGGF,EAAS3J,EAAShD,MAAMsM,QAAQQ,WAHnCjF,EAAAhE,OAAA,SAKU,WACL8I,EAAS,MANd,wBAAA9E,EAAA/E,SAAA6E,KAADjH,IAUC,CAACsC,IAEG,CAAEhD,QAAO0G,UAAS3B,aAAYC,cFxCcgI,CAAShK,GAApDhD,EAHO0M,EAGP1M,MAAO0G,EAHAgG,EAGAhG,QAAS3B,EAHT2H,EAGS3H,WAAYC,EAHrB0H,EAGqB1H,WAC9BiI,EAAY,eAAA5M,EAAAK,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAG,SAAAC,EAAO0K,GAAP,OAAA5K,EAAAnB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAiG,GACnB1F,EADmBP,EAAAE,KAAA,EACD6D,GAAG0G,YAAYD,EAAStM,OADvB,OAAA8B,EAAAiJ,GAAAjJ,EAAAG,MAAA,EAAAH,EAAAiG,IAAAjG,EAAAiJ,IAAA,wBAAAjJ,EAAAI,SAAAN,MAAH,gBAAAsB,GAAA,OAAAzD,EAAA0D,MAAAC,KAAAC,YAAA,GAIZmC,EAAapD,GAAYA,EAAS6C,GAAK7C,EAAS6C,GAAK,KAE3D,OACE3E,EAAAC,EAAAC,cAAA,OAAKK,UAAS,GAAAK,OAAKJ,IAAQ7B,KAAb,UACZqB,EAAAC,EAAAC,cAAA,MAAIK,UAAWC,IAAQ5B,QAAvB,QACAoB,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQvC,UACtB+B,EAAAC,EAAAC,cAACgM,EAAD,CACEnL,SAAUgL,EACVjK,SAAUA,EACVC,YAAaA,EACbC,WAAYA,EACZC,YAAaA,KAGhBH,GAAYoD,EACXlF,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQ3B,SACtBmB,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQ1B,OACtBkB,EAAAC,EAAAC,cAACiM,EAAD,CACErN,MAAOA,EACP+E,WAAYA,EACZC,WAAYA,KAGhB9D,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQzB,SACtBiB,EAAAC,EAAAC,cAACkM,EAAD,CACEhN,OAAM,eAAA4B,EAAAxB,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAE,SAAA+C,EAAOvF,EAAiBwE,GAAxB,OAAAjC,EAAAnB,EAAAsB,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,YACF7C,EAAQ2D,OAAS,GAAKa,EAAO,IAAID,MAD/B,CAAAiB,EAAA3C,KAAA,eAAA2C,EAAA3C,KAAA,EAEE8D,EAAQ,CAAEN,aAAYrG,UAASwE,SAFjC,cAAAgB,EAAA1B,OAAA,UAGG,GAHH,cAAA0B,EAAA1B,OAAA,UAKG,GALH,wBAAA0B,EAAAzC,SAAAwC,MAAF,gBAAAE,EAAAoG,GAAA,OAAA1J,EAAA6B,MAAAC,KAAAC,YAAA,KASR/C,EAAAC,EAAAC,cAAA,OAAKmM,MAAO,CAAEC,KAAM,WACpBtM,EAAAC,EAAAC,cAACqM,EAAD,CACEtH,eAAczF,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAnB,EAAAoB,KAAE,SAAAwF,IAAA,OAAAzF,EAAAnB,EAAAsB,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,cAAAsF,EAAAtF,KAAA,EACRuD,EAAenD,GADP,OAEdC,EAAY,MAFE,wBAAAiF,EAAApF,SAAAiF,UAQtB,KGnDO2F,OARf,WACE,OACExM,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAQxC,WACtBgC,EAAAC,EAAAC,cAACuM,GAAD,QCGAC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA8CN,SAASC,GAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KChGjEC,IAASC,OAAOrO,EAAAC,EAAAC,cAACoO,GAAD,MAAUC,SAASC,eAAe,SDmB3C,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIsB,IACnBC,GACD9B,OAAOC,SAAS8B,MAEJC,SAAWhC,OAAOC,SAAS+B,OAIvC,OAGFhC,OAAOiC,iBAAiB,OAAQ,WAC9B,IAAM5B,EAAK,GAAArM,OAAM8N,GAAN,sBAEPhC,IAgEV,SAAiCO,EAAeC,GAE9C4B,MAAM7B,GACHK,KAAK,SAAAyB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYtM,QAAQ,cAG5CyK,UAAUC,cAAcgC,MAAM9B,KAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,KAAK,WAC7BV,OAAOC,SAASyC,aAKpBtC,GAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEArFAwB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,KAAK,WACjCQ,QAAQC,IACN,gHAMJf,GAAgBC,EAAOC,MC7C/BE,uBCZAtP,EAAAC,QAAA,CAAkBG,MAAA,2BAAAS,KAAA,0BAAAkC,MAAA","file":"static/js/main.05ed362e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CatagorySelect_container__Vm5o7\",\"dropdown\":\"CatagorySelect_dropdown__1H6na\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Root_container__3ERK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__1yufM\",\"modal\":\"Tasks_modal__2C8Ed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Task_wrapper__2FW9g\",\"check\":\"Task_check__345D4\",\"task\":\"Task_task__1RTL7\",\"time\":\"Task_time__1I3dF\",\"string\":\"Task_string__37pU2\",\"fill\":\"Task_fill__Xw4qY\",\"more\":\"Task_more__iOnS_\",\"border\":\"Task_border__zN_Ds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Table_card__1IIwp\",\"header\":\"Table_header__AU8tW\",\"content\":\"Table_content__12Bbk\",\"tasks\":\"Table_tasks__3GpqN\",\"actions\":\"Table_actions__1waI0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"TaskDetails_modal__1j-zT\",\"card\":\"TaskDetails_card__2sl4-\",\"form\":\"TaskDetails_form__3STiw\",\"field\":\"TaskDetails_field__2HI5K\"};","import React, { useState } from \"react\";\nimport { Button, IconButton, Modal, TextField } from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\n\nimport classes from \"./AddCatagory.module.scss\";\n\nfunction AddCatagory({\n  submit\n}: {\n  submit: (value: string) => Promise<boolean>;\n}) {\n  const [value, setValue] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div>\n      <IconButton color=\"primary\" onClick={() => setOpen(true)}>\n        <Add />\n      </IconButton>\n      <Modal\n        className={classes.modal}\n        open={open}\n        onBackdropClick={() => setOpen(false)}\n        onEscapeKeyDown={() => setOpen(false)}\n        children={\n          <div className={`${classes.card} card`}>\n            <TextField\n              className={classes.input}\n              label=\"Name\"\n              onChange={({ currentTarget }) => setValue(currentTarget.value)}\n            />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={async () => {\n                if (await submit(value)) {\n                  setOpen(false);\n                }\n              }}\n            >\n              Submit\n            </Button>\n          </div>\n        }\n      />\n    </div>\n  );\n}\n\nexport default AddCatagory;\n","import React from \"react\";\nimport Dropdown, { Option } from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nimport classes from \"./CatagorySelect.module.scss\";\nimport AddCatagory from \"./AddCatagory/AddCatagory.component\";\nimport { Catagory, ICatagory } from \"../../../utils/database.util\";\n\nfunction CatagorySelect({\n  onChange,\n  catagory,\n  setCatagory,\n  catagories,\n  addCatagory\n}: {\n  onChange: (selected: Option) => void;\n  catagory: Catagory | null;\n  setCatagory: React.Dispatch<React.SetStateAction<Catagory | null>>;\n  catagories: Catagory[];\n  addCatagory: (data: ICatagory) => Promise<Catagory>;\n}) {\n  const option = catagory\n    ? {\n        label: catagory.label,\n        value: catagory.value\n      }\n    : \"\";\n\n  return (\n    <div className={classes.container}>\n      <Dropdown\n        className={classes.dropdown}\n        options={catagories}\n        onChange={onChange}\n        value={option}\n      />\n      <AddCatagory\n        submit={async (label: string) => {\n          const value = label.toLowerCase();\n          if (\n            label.length > 0 &&\n            catagories.map(catagory => catagory.value).indexOf(value) === -1\n          ) {\n            const catagory = await addCatagory({ label, value });\n            setCatagory(catagory);\n            return true;\n          } else {\n            return false;\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default CatagorySelect;\n","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, TextField } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker,\n  TimePicker\n} from \"material-ui-pickers\";\n\nimport classes from \"./TaskDetails.module.scss\";\n\nfunction TaskDetails({\n  open,\n  setOpen,\n  initialDate,\n  initialContent,\n  submit\n}: {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  initialDate: Date;\n  initialContent: string;\n  submit: (content: string, date: Date) => Promise<boolean>;\n}) {\n  const [content, setContent] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    setContent(initialContent);\n    setDate(initialDate);\n    return () => {\n      setContent(\"\");\n      setDate(new Date());\n    };\n  }, [initialContent, initialDate]);\n\n  return (\n    <Modal\n      open={open}\n      onBackdropClick={() => setOpen(false)}\n      onEscapeKeyDown={() => setOpen(true)}\n      className={classes.modal}\n      children={\n        <div className={`${classes.card} card`}>\n          <form className={classes.form}>\n            <div className={classes.field}>\n              <TextField\n                label=\"Task\"\n                value={content}\n                onChange={({ currentTarget }) =>\n                  setContent(currentTarget.value)\n                }\n              />\n            </div>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <div className={classes.field}>\n                <DatePicker onChange={setDate} value={date} label=\"Date\" />\n              </div>\n              <div className={classes.field}>\n                <TimePicker onChange={setDate} value={date} label=\"Time\" />\n              </div>\n            </MuiPickersUtilsProvider>\n          </form>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={async () => {\n              if (await submit(content, date)) {\n                setOpen(false);\n              }\n            }}\n          >\n            Add Task\n          </Button>\n        </div>\n      }\n    />\n  );\n}\n\nexport default TaskDetails;\n","import React, { useState } from \"react\";\nimport format from \"date-fns/esm/format\";\nimport { Fade, Slide, IconButton } from \"@material-ui/core\";\nimport { Check, MoreVert, AccessTime } from \"@material-ui/icons\";\n\nimport classes from \"./Task.module.scss\";\nimport { Task as TaskClass } from \"../../../../utils/database.util\";\nimport TaskDetails from \"../../TaskDetails/TaskDetails.component\";\n\nfunction Task({\n  task,\n  index,\n  deleteTask,\n  updateTask\n}: {\n  task: TaskClass;\n  index: number;\n  deleteTask: (index: number) => void;\n  updateTask: (index: number, data: {content: string, date: Date}) => void;\n}) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className={classes.border}>\n      <Fade in={true}>\n        <Slide direction=\"up\" in={true}>\n          <div className={classes.wrapper}>\n            <div className={classes.check}>\n              <IconButton onClick={async () => await deleteTask(index)}>\n                <Check />\n              </IconButton>\n            </div>\n            <div className={classes.task}>\n              <div>{task.content}</div>\n              <div className={classes.time}>\n                <AccessTime />\n                <span className={classes.string}>\n                  {format(task.date, \"MMMM do h:mm a\")}\n                </span>\n              </div>\n            </div>\n            <div className={classes.fill} />\n            <div className={classes.more}>\n              <IconButton onClick={() => setOpen(true)}>\n                <MoreVert />\n              </IconButton>\n            </div>\n          </div>\n        </Slide>\n      </Fade>\n      <TaskDetails\n        open={open}\n        setOpen={setOpen}\n        initialContent={task.content}\n        initialDate={task.date}\n        submit={async (content, date) => {\n          if (content.length > 0 && date > new Date()) {\n            await updateTask(index, { content, date });\n            return true;\n          } else {\n            return false;\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Task;\n","import React from \"react\";\n\nimport classes from \"./Tasks.module.scss\";\nimport Task from \"./Task/Task.component\";\nimport { Task as TaskClass } from \"../../../utils/database.util\";\n\nfunction Tasks({\n  tasks,\n  deleteTask,\n  updateTask\n}: {\n  tasks: TaskClass[];\n  deleteTask: (index: number) => void;\n  updateTask: (index: number, data: {content: string, date: Date}) => void;\n}) {\n  const elementTasks = (tasks ? tasks : []).map<any>((task, index) => {\n    return (\n      <Task\n        key={task.id ? task.id : Math.random()}\n        task={task}\n        index={index}\n        deleteTask={deleteTask}\n        updateTask={updateTask}\n      />\n    );\n  });\n\n  return <div className={classes.container}>{elementTasks}</div>;\n}\n\nexport default Tasks;\n","import React, { useState } from \"react\";\nimport { Button, Fade, Slide } from \"@material-ui/core\";\nimport TaskDetails from \"../TaskDetails/TaskDetails.component\";\n\nfunction AddTask({\n  submit\n}: {\n  submit: (content: string, date: Date) => Promise<boolean>;\n}) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div>\n      <Fade in={true}>\n        <Slide direction=\"left\" in={true}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => setOpen(true)}\n          >\n            Add a Task\n          </Button>\n        </Slide>\n      </Fade>\n      <TaskDetails\n        open={open}\n        setOpen={setOpen}\n        initialDate={new Date(Date.now() + 15 * 60 * 1000)}\n        initialContent=\"\"\n        submit={submit}\n      />\n    </div>\n  );\n}\n\nexport default AddTask;\n","import React from \"react\";\nimport { Fade, Button, Slide } from \"@material-ui/core\";\n\nfunction DeleteCatagory({ deleteCatagory }: { deleteCatagory: () => void }) {\n  return (\n    <Fade in={true}>\n      <Slide direction=\"right\" in={true}>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={async () => await deleteCatagory()}\n        >\n          Delete Catagory\n        </Button>\n      </Slide>\n    </Fade>\n  );\n}\n\nexport default DeleteCatagory;\n","import Dexie from \"dexie\";\n\nexport interface ICatagory {\n  id?: number;\n  label: string;\n  value: string;\n}\n\nexport interface ITask {\n  id?: number;\n  catagoryId: number;\n  content: string;\n  date: Date;\n}\n\nexport class Task implements ITask {\n  id: number | undefined;\n  catagoryId: number;\n  content: string;\n  date: Date;\n\n  constructor({ id, catagoryId, content, date }: ITask) {\n    this.id = id;\n    this.catagoryId = catagoryId;\n    this.content = content;\n    this.date = date;\n  }\n\n  async save() {\n    const tNew = await db.addTask(this);\n    if (tNew.id) {\n      this.id = tNew.id;\n    }\n    return tNew;\n  }\n\n  async delete() {\n    if (this.id) {\n      await db.tasks\n        .where(\"id\")\n        .equals(this.id)\n        .delete();\n    }\n  }\n}\n\nexport class Catagory implements ICatagory {\n  id: number | undefined;\n  label: string;\n  value: string;\n  @enumerable(false) tasks: Task[];\n\n  constructor({ id, label, value }: ICatagory) {\n    this.id = id;\n    this.label = label;\n    this.value = value;\n    this.tasks = [];\n  }\n\n  /**\n   * Saves the modified record to the database including deleting any removed tasks\n   * Uses a transaction for roll back purposes on error\n   */\n  async save() {\n    return await db.transaction(\"rw\", [db.catagories, db.tasks], async () => {\n      const catNew = await db.addCatagory(this);\n\n      if (catNew.id) {\n        this.id = catNew.id;\n\n        const taskIds = await Promise.all(\n          this.tasks.map(task => db.tasks.put(task))\n        );\n\n        await db.tasks\n          .where(\"catagoryId\")\n          .equals(this.id)\n          .and(task => {\n            if (task.id) {\n              return taskIds.indexOf(task.id) === -1;\n            } else {\n              return false;\n            }\n          })\n          .delete();\n      }\n      return catNew;\n    });\n  }\n\n  async loadTasks() {\n    if (this.id) {\n      this.tasks = (await db.tasks\n        .where(\"catagoryId\")\n        .equals(this.id)\n        .toArray()).map(elm => new Task(elm));\n    } else {\n      throw new Error(\"Please save the catagory to access its foreign objects\");\n    }\n  }\n\n  async delete() {\n    if (this.id) {\n      await Promise.all(\n        this.tasks.map(task => {\n          return task.delete();\n        })\n      );\n      await db.catagories\n        .where(\"id\")\n        .equals(this.id)\n        .delete();\n    }\n  }\n\n  static async getAll() {\n    return (await db.catagories.toArray()).map(elm => new Catagory(elm));\n  }\n}\n\nexport class Database extends Dexie {\n  catagories: Dexie.Table<ICatagory, number>;\n  tasks: Dexie.Table<ITask, number>;\n\n  constructor(name: string) {\n    super(name);\n    this.version(1).stores({\n      catagories: \"++id, label, value\",\n      tasks: \"++id, catagoryId, content, date\"\n    });\n\n    this.catagories = this.table(\"catagories\");\n    this.tasks = this.table(\"tasks\");\n\n    this.catagories.mapToClass(Catagory);\n  }\n\n  async addCatagory({ id, ...data }: ICatagory) {\n    return await this.transaction(\"rw\", [this.catagories], async () => {\n      const newId = id\n        ? await this.catagories.put({ id, ...data })\n        : await this.catagories.put(data);\n      return new Catagory({ id: newId, ...data });\n    });\n  }\n\n  async addTask({ id, ...data }: ITask) {\n    return await this.transaction(\"rw\", [this.tasks], async () => {\n      const newId = id\n        ? await this.tasks.put({ id, ...data })\n        : await this.tasks.put(data);\n\n      return new Task({ id: newId, ...data });\n    });\n  }\n\n  async getCatagory(value: string) {\n    return new Catagory(\n      (await this.catagories\n        .where(\"value\")\n        .equals(value)\n        .limit(1)\n        .toArray())[0]\n    );\n  }\n}\n\nexport var db = new Database(\"todo\");\n\n/**\n * @enumerable decorator that sets the enumerable property of a class field to false.\n * @param value true|false\n */\nfunction enumerable(value: boolean) {\n  return function(target: any, propertyKey: string) {\n    let descriptor = Object.getOwnPropertyDescriptor(target, propertyKey) || {};\n    // eslint-disable-next-line eqeqeq\n    if (descriptor.enumerable != value) {\n      descriptor.enumerable = value;\n      Object.defineProperty(target, propertyKey, descriptor);\n    }\n  };\n}\n","import React, { useState } from \"react\";\nimport { Option } from \"react-dropdown\";\n\nimport classes from \"./Table.module.scss\";\nimport CatagorySelect from \"./CatagorySelect/CatagorySelect.component\";\nimport Tasks from \"./Tasks/Tasks.component\";\nimport AddTask from \"./AddTask/AddTask.component\";\nimport DeleteCatagory from \"./DeleteCatagory/DeleteCatagory.component\";\n\nimport { useTasks } from \"../../hooks/useTasks.hook\";\nimport { useCatagories } from \"../../hooks/useCatagories.hook\";\nimport { Catagory, db } from \"../../utils/database.util\";\n\nfunction Table() {\n  const { catagories, addCatagory, deleteCatagory } = useCatagories();\n  const [catagory, setCatagory] = useState<Catagory | null>(null);\n  const { tasks, addTask, deleteTask, updateTask } = useTasks(catagory);\n  const handleChange = async (selected: Option) => {\n    setCatagory(await db.getCatagory(selected.value));\n  };\n\n  const catagoryId = catagory && catagory.id ? catagory.id : null;\n\n  return (\n    <div className={`${classes.card} card`}>\n      <h1 className={classes.header}>Todo</h1>\n      <div className={classes.dropdown}>\n        <CatagorySelect\n          onChange={handleChange}\n          catagory={catagory}\n          setCatagory={setCatagory}\n          catagories={catagories}\n          addCatagory={addCatagory}\n        />\n      </div>\n      {catagory && catagoryId ? (\n        <div className={classes.content}>\n          <div className={classes.tasks}>\n            <Tasks\n              tasks={tasks}\n              deleteTask={deleteTask}\n              updateTask={updateTask}\n            />\n          </div>\n          <div className={classes.actions}>\n            <AddTask\n              submit={async (content: string, date: Date) => {\n                if (content.length > 0 && date > new Date()) {\n                  await addTask({ catagoryId, content, date });\n                  return true;\n                } else {\n                  return false;\n                }\n              }}\n            />\n            <div style={{ flex: \"1 0 0\" }} />\n            <DeleteCatagory\n              deleteCatagory={async () => {\n                await deleteCatagory(catagory);\n                setCatagory(null);\n              }}\n            />\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default Table;\n","import { useState, useEffect } from \"react\";\nimport { Catagory, ICatagory } from \"../utils/database.util\";\n\nexport function useCatagories() {\n  const [catagories, setCatagories] = useState<Catagory[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      setCatagories(await Catagory.getAll());\n    })();\n  }, []);\n\n  const addCatagory = async (data: ICatagory) => {\n    const catNew = await new Catagory(data).save();\n    const catagoriesNew = [catNew, ...catagories];\n    setCatagories(catagoriesNew);\n    return catNew;\n  };\n\n  const deleteCatagory = async (catagory: Catagory) => {\n    const catsNew = catagories.slice();\n    catsNew.splice(catsNew.map(cat => cat.id).indexOf(catagory.id), 1);\n    await catagory.delete();\n    setCatagories(catsNew);\n  };\n\n  return { catagories, addCatagory, deleteCatagory };\n}\n","import { useState, useEffect } from \"react\";\n\nimport { Task, Catagory, ITask } from \"../utils/database.util\";\n\nexport function useTasks(catagory: Catagory | null) {\n  const [tasks, setTasks] = useState<Task[]>([]);\n\n  const addTask = async (data: ITask) => {\n    if (catagory) {\n      const tNew = await new Task(data).save();\n      const tasksNew = [tNew, ...tasks];\n      setTasks(tasksNew);\n    }\n  };\n\n  const deleteTask = async (index: number) => {\n    if (catagory) {\n      await catagory.loadTasks();\n      catagory.tasks\n        .reverse()\n        .splice(index, 1)\n        .reverse();\n      await catagory.save();\n      setTasks(catagory.tasks.slice());\n    }\n  };\n\n  const updateTask = async (\n    index: number,\n    { content, date }: { content: string; date: Date }\n  ) => {\n    if (catagory) {\n      await catagory.loadTasks();\n      const tasksNew = catagory.tasks.slice().reverse();\n      const task = tasksNew[index];\n      task.content = content;\n      task.date = date;\n      catagory.tasks = tasksNew.slice().reverse();\n      await catagory.save();\n      setTasks(tasksNew);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (catagory) {\n        await catagory.loadTasks();\n        setTasks(catagory.tasks.slice().reverse());\n\n        return () => {\n          setTasks([]);\n        };\n      }\n    })();\n  }, [catagory]);\n\n  return { tasks, addTask, deleteTask, updateTask };\n}\n","import React from \"react\";\n\nimport classes from \"./Root.module.scss\";\n\nimport Table from \"../Table/Table.component\";\n\nfunction Root() {\n  return (\n    <div className={classes.container}>\n      <Table />\n    </div>\n  );\n}\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nimport Root from './components/Root/Root.component';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"AddCatagory_modal__2IlSl\",\"card\":\"AddCatagory_card__2liAd\",\"input\":\"AddCatagory_input__34Mz7\"};"],"sourceRoot":""}